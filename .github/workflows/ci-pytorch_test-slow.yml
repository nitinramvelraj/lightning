name: Test slow

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches: [master, "release/*"]
  pull_request:
    branches: [master, "release/*"]
    types: [opened, reopened, ready_for_review, synchronize]
    paths-ignore:
      - "src/lightning_app/**"  # todo: implement job skip

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ ! (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release/')) }}

jobs:
  slow:
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]
        # same config as '.azure-pipelines/gpu-tests.yml'
        python-version: ["3.7"]
        pytorch-version: ["1.11"]

    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Reset caching
      run: python -c "import time; days = time.time() / 60 / 60 / 24; print(f'TIME_PERIOD=d{int(days / 2) * 2}')" >> $GITHUB_ENV

    - name: Get pip cache
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-td${{ env.TIME_PERIOD }}-py${{ matrix.python-version }}-${{ hashFiles('requirements/pytorch/base.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-td${{ env.TIME_PERIOD }}-py${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        # adjust versions according installed Torch version
        python ./requirements/pytorch/adjust-versions.py requirements.txt ${{ matrix.pytorch-version }}
        pip install -e .[test] --find-links https://download.pytorch.org/whl/cpu/torch_stable.html --upgrade
        pip list
      shell: bash

    - name: Testing PyTorch
      working-directory: tests/tests_pytorch
      run: coverage run --source pytorch_lightning -m pytest -v --junitxml=results-${{ runner.os }}-py${{ matrix.python-version }}.xml
      env:
        PL_RUN_SLOW_TESTS: 1

    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: unittest-results-${{ runner.os }}-py${{ matrix.python-version }}
        path: tests/tests_pytorch/results-${{ runner.os }}-py${{ matrix.python-version }}.xml
      if: failure()

    - name: Statistics
      if: success()
      working-directory: tests/tests_pytorch
      run: |
        coverage report
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      if: success()
      # see: https://github.com/actions/toolkit/issues/399
      continue-on-error: true
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: tests/tests_pytorch/coverage.xml
        flags: cpu,pytest,torch${{ matrix.pytorch-version }}
        name: CPU-coverage
        fail_ci_if_error: false
